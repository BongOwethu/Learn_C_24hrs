# **Q&A**

*Q:* Why do we need the sizeof operator?
*A:* The sizeof operator can be used to measure the sizes of all data types defined in C. When you write a portable C program that needs to know the size of an integer variable, it’s a bad idea to hard-code the size based on the machine you are currently using. The better way to tell the program the size of the variable is to use the sizeof operator, which yields the size of the integer variable at runtime.

*Q:* What’s the difference between | and ||?
*A:* | is the bitwise OR operator that takes two operands. The | operator compares each bit of one operand to the corresponding bit in another operand. If both bits are 0, 0 is placed at the same position of the bit in the result. Otherwise, 1 is placed in
the result.On the other hand, ||, as the logical OR operator, requires two operands
(or expressions). The operator yields 0 only if both of its operands evaluate to 0.
Otherwise, the operator yields 1.

*Q:* Why is 1 << 3 equivalent to 1 * 23?
*A:* The 1 << 3 expression tells the computer to shift 3 bits of the operand 1 to the left. The binary format of the operand is 0001. (Note that only the lowest four bits are shown here.) After being shifted 3 bits to left, the binary number becomes 1000, which is equivalent to 1 * 23+0 * 22+0 * 21+0 * 20; that is, 1 * 23.

*Q:* What can the conditional operator (?:) do?
*A:* If there are two possible answers under certain conditions, you can use the ?: operator to pick up one of the two answers based on the result made by testing the conditions.
For instance, the expression (age > 65) ? “Retired” : “Not retired”
tells the computer that if the value of age is greater than 65, the string of Retired should be chosen; otherwise, Not retired is chosen.
