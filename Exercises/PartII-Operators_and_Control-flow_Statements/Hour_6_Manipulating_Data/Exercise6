# **Exercises
1. Given x = 1 and y = 3, write a program to print out the results of these expressions:
x += y, x += -y, x -= y, x -= -y, x *= y, and x *= -y.
*Answer*
#include <stdio.h>
main()
{
    int x, y;
    x = 1;
    y = 3;

    printf("Given x = %d, y = %d\n", x, y);
    printf("x += y produces: %d\n", x += y);
    printf("x += -y produces: %d\n", x += -y);
    printf("x -= y produces: %d\n", x -= y);
    printf("x -= -y produces: %d\n", x -= -y);
    printf("x *= y produces: %d\n", x *= y);
    printf("x *= -y produces: %d\n", x *= -y);

}

2. Given x = 3 and y = 6, what is the value of z after the statement
z = x * y == 18; is executed?
*Answer*
#include <stdio.h>
main()
{
    int x, y, z;
    x = 3;
    y = 6;
    z = x * y == 18;

    printf("Given x = %d, y = %d  z = %d\n", x, y, z);
    printf("z = x * y == 18 produces: %d\n", z);

}

3. Write a program that initializes the integer variable x with 1 and outputs results with the following two statements:
printf(“x++ produces: %d\n”, x++);
printf(“Now x contains: %d\n”, x);
*Answer*
#include <stdio.h>
main()
{
    int x;
    x = 1;

    printf("x++ produces: %d\n", x++);
    printf("Now x contains: %d\n", x);

}

4. Rewrite the program you wrote in exercise 3. This time, include the following two statements:
printf(“x = x++ produces: %d\n”, x = x++);
printf(“Now x contains: %d\n”, x);
#include <stdio.h>
 /* This function multiplies two integers and returns the result */
main()
{
    int x, y, z;
    x = 3;
    y = 6;
    z = x * y == 18;

    printf("Given x = %d, y = %d  z = %d\n", x, y, z);
    printf("z = x * y == 18 produces: %d\n", z);

}What do you get after running the executable of the program? Can you explain why you get such a result?
*Answer*
When x*y= 3*6= 18 therefor z = 18 == 18  there is a a comparison and it yeilds 1 if succeeded otherwise 0 if failed.

5. The following program is supposed to compare the two variables, x and y, for equality. What’s wrong with the program? (Hint: Run the program to see what it prints out.)
#include <stdio.h>
main()
{
int x, y;
x = y = 0;
printf(“The comparison result is: %d\n”, x = y);
return 0;
}
*Answer*
The values for x and y are being equated and not comparison and it yeilds 1 if succeeded otherwise 0 if failed. The values is being assigned to each other with = and not being compared using the ==.

if they are being compared:
#include <stdio.h>
main()
{
    int x, y;
    x = y = 0;
    printf("The comparison result is: %d\n", x = y);
    return 0;
}
the answer will be 1
